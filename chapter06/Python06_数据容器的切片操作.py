"""
演示对序列进行切片操作
步长为一，一个一个元素取
步长为二，每隔一个元素取
步长为N，每隔N - 1个元素取
步长为负，反向取
"""

# 对list进行切片，从1开始，4结束，步长1
my_list = [0, 1, 2, 3, 4, 5, 6]
res1 = my_list[1:4:1]  # 步长是1默认长度，可以不写
print(f"结果1：{res1}")

# 对tuple进行切片，从头开始，最后结束，步长1
my_tuple = (0, 1, 2, 3, 4, 5, 6)
res2 = my_tuple[:]  # 起始和结束不写表示从头到尾，步长为1可以省略
print(f"结果2：{res2}")

# 对str进行切片，从头开始，最后结束，步长2
my_str = "01234567"
res3 = my_str[::2]
print(f"结果3：{res3}")

# 对str进行切片，从头开始，最后结束，步长-1
my_str = "01234567"
res4 = my_str[::-1]  # 等同于将序列反转
print(f"结果4：{res4}")

# 对列表进行切片，从3开始，1结束，步长-1
my_list = [0, 1, 2, 3, 4, 5, 6]
res5 = my_list[3:1:-1]  # 不包含1本身
print(res5)

# 对元组进行切片，从头开始，最后结束，步长-2
my_tuple = (0, 1, 2, 3, 4, 5, 6)
res6 = my_tuple[::-2]
print(res6)
